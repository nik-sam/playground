name: Slack PR Notification

on:
  pull_request:
    types: [opened, closed]
  pull_request_review:
    types: [submitted]

# Workflow-level variables (available to all jobs)
env:
  SLACK_CHANNEL: "niks-playground"
  TEAM_MEMBERS_TOP_LEVEL: "nik-sam, NikS-44"
  
jobs:
  notify_slack:
    # Can't use env variables in if conditions at the job level
    if: ${{ github.event.pull_request.user.login == 'nik-sam' || startsWith(github.event.pull_request.user.login, 'nik-sam') }}
    runs-on: ubuntu-latest
    # Job-level variables (available to all steps in this job)
    env:
      TEAM_MEMBERS: "nik-sam, NikS-44"
    steps:
      - name: Debug Info
        run: |
          echo "PR Author: ${{ github.event.pull_request.user.login }}"
          echo "Event Type: ${{ github.event.action }}"
          echo "Is nik-sam: ${{ github.event.pull_request.user.login == 'nik-sam' }}"
          echo "Starts with nik-sam: ${{ startsWith(github.event.pull_request.user.login, 'nik-sam') }}"
          echo "Team Members: ${{ env.TEAM_MEMBERS }}"
          echo "Team Members Top Level: ${{ env.TEAM_MEMBERS_TOP_LEVEL }}"
          echo "Slack Channel: ${{ env.SLACK_CHANNEL }}"

      - name: Get PR details
        id: pr_details
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
          echo "PR_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_OUTPUT
          echo "PR_USER=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
          echo "PR_REVIEW_STATE=${{ github.event.review.state }}" >> $GITHUB_OUTPUT
          echo "PR_REVIEW_USER=${{ github.event.review.user.login }}" >> $GITHUB_OUTPUT

      - name: Send Slack Notification (PR Opened)
        if: github.event.action == 'opened'
        id: slack_message
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "New PR opened by ${{ steps.pr_details.outputs.PR_USER }}: <${{ steps.pr_details.outputs.PR_URL }}|${{ steps.pr_details.outputs.PR_TITLE }}>",
              "channel": "${{ env.SLACK_CHANNEL }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PLATFORM_UX_WEBHOOK_URL }}

      - name: Find and React to Message (Approved)
        if: github.event.review.state == 'approved'
        run: |
          # First find the message
          RESPONSE=$(curl -s -X POST https://slack.com/api/conversations.history \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data "{\"channel\": \"${{ env.SLACK_CHANNEL }}\", \"limit\": ${{ env.MAX_MESSAGES }}}")
          
          # Find message with PR URL
          MESSAGE_TS=$(echo $RESPONSE | jq -r --arg url "${{ steps.pr_details.outputs.PR_URL }}" '.messages[] | select(.text | contains($url)) | .ts' | head -n1)
          
          if [ ! -z "$MESSAGE_TS" ]; then
            # Add reaction
            curl -X POST https://slack.com/api/reactions.add \
              -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{\"channel\": \"${{ env.SLACK_CHANNEL }}\", \"name\": \"white_check_mark\", \"timestamp\": \"$MESSAGE_TS\"}"
          fi

      - name: Find and React to Message (Merged)
        if: github.event.pull_request.merged == true
        run: |
          # First find the message
          RESPONSE=$(curl -s -X POST https://slack.com/api/conversations.history \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data "{\"channel\": \"${{ env.SLACK_CHANNEL }}\", \"limit\": ${{ env.MAX_MESSAGES }}}")
          
          # Find message with PR URL
          MESSAGE_TS=$(echo $RESPONSE | jq -r --arg url "${{ steps.pr_details.outputs.PR_URL }}" '.messages[] | select(.text | contains($url)) | .ts' | head -n1)
          
          if [ ! -z "$MESSAGE_TS" ]; then
            # Add merge reaction
            curl -X POST https://slack.com/api/reactions.add \
              -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{\"channel\": \"${{ env.SLACK_CHANNEL }}\", \"name\": \"arrows_counterclockwise\", \"timestamp\": \"$MESSAGE_TS\"}"
          fi